class Solution:
    def countNegatives(self, grid: List[List[int]]) -> int:
        m, n = len(grid), len(grid[0])  # 獲取矩陣的行數和列數
        r, c, cnt = 0, n - 1, 0  # 初始化行索引、列索引和負數計數
        while r < m and c >= 0:  # 只要行索引小於行數並且列索引大於等於0
            if grid[r][c] < 0:  # 如果當前元素小於0
                cnt += m - r  # 將該列剩餘的行數加到計數器中，因為這些都將是負數
                c -= 1  # 列索引向左移動
            else:
                r += 1  # 否則行索引向下移動
        return cnt  # 返回負數計數器
"""

題目中的矩陣被設計為從左到右和從上到下都是遞增的，並且只有負數和非負數。
這意味著我們只需要找到每列的第一個負數，剩下的就都是負數了。由於是從左到右和從上到下遞增的，我們可以從右上角開始查找，這樣可以節省一些時間。

時間複雜度:

O(m + n) - 在最壞的情況下，我們可能需要遍歷所有的行和列。
空間複雜度:

O(1) - 我們只使用了常數的額外空間。

"""